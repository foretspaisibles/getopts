{"name":"Getopts","tagline":"Program arguments analysis for OCaml","body":"# Getopts, analyse command line arguments for OCaml programs\r\n\r\nThe **Getopts** projects implements a library to functionally analyse\r\ncommand line arguments in OCaml programs.\r\n\r\n[![Build Status](https://travis-ci.org/michipili/getopts.svg?branch=master)](https://travis-ci.org/michipili/getopts?branch=master)\r\n\r\nIt support traditional short options, option clusters, and also long\r\noptions introduced by a special letter, similar to what **gcc** or\r\n**clang** proposes.\r\n\r\n\r\n## Option clusters\r\n\r\nThe **Getopts** module support option clusters, meaning that if `-a`\r\nis a command flag and `-o` and option with an argument, all the\r\ninvocations\r\n\r\n    cmd -aoarg file file\r\n    cmd -a -o arg file file\r\n    cmd -a -oarg file file\r\n\r\nare interpreted the same way.\r\n\r\n\r\n## Option delimiter\r\n\r\nThe **Getopts** module uses `--` as an option delimiter, meaning that\r\nmeaning that if `-a` is a command flag and `-o` and option with an\r\nargument then the invocations\r\n\r\n    cmd -a -oarg -- file file\r\n    cmd -a -oarg file file\r\n\r\nare equivalent.\r\n\r\n\r\n## Options with long names\r\n\r\nGNU style long options are not supported but it is possible to use\r\nsomething similar to an option with a long name, in a similar way as\r\n**gcc** or **clang** does. It is possible to configure **Getopts** so\r\nthat invocations like\r\n\r\n    cmd -fsyntax-only -fobjc-abi-version=2 -March=hammer\r\n    cmd -f syntax-only -f objc-abi-version=2 -M arch=hammer\r\n\r\nare easily analysed.\r\n\r\n\r\n## Help screen\r\n\r\nThe **Getopts** module can automatically prepare and format an help\r\nscreen, similar to this one:\r\n\r\n    Usage: test_getopts [-avh][-i int][-f float][-b bool][-s string][--][rest]\r\n     Test the Getopts module\r\n    Options:\r\n     -h Display available options.\r\n     -a The a flag.\r\n     -v The v flag.\r\n     -b The b option.\r\n     -c The c option.\r\n     -s The s option.\r\n     -i The i option.\r\n     -f The f option.\r\n    Short Note: This is an example of a short note.\r\n    Long Note:\r\n     This is an example of a very long note whose contents spans over several\r\n     lines.  It really has to be that long, so we will write here as much silly\r\n     text as needed.\r\n       And we also need several pragraphs of irrelevant text, but believe me,\r\n     this has nothing to do with you, just with the example.\r\n\r\n\r\n## Free software\r\n\r\nIt is written by Michael Grünewald and is distributed as a free\r\nsoftware: copying it  and redistributing it is\r\nvery much welcome under conditions of the [CeCILL-B][licence-url]\r\nlicence agreement, found in the [COPYING][licence-en] and\r\n[COPYING-FR][licence-fr] files of the distribution.\r\n\r\n\r\n## Setup guide\r\n\r\nIt is easy to install **Getopts** using **opam** and its *pinning*\r\nfeature.  In a shell visiting the repository, say\r\n\r\n```console\r\n% opam pin add getopts .\r\n```\r\n\r\nIt is also possible to install **Getopts** manually.\r\nThe installation procedure is based on the portable build system\r\n[BSD Owl Scripts][bsdowl-home] written for BSD Make.\r\n\r\n1. Verify that prerequisites are installed:\r\n   - BSD Make\r\n   - [BSD OWl][bsdowl-install]\r\n   - OCaml\r\n   - GNU Autoconf\r\n\r\n2. Get the source, either by cloning the repository or by exploding a\r\n   [distribution tarball](releases).\r\n\r\n3. Optionally run `autoconf` to produce a configuration script. This\r\n   is only required if the script is not already present.\r\n\r\n4. Run `./configure`, you can choose the installation prefix with\r\n   `--prefix`.\r\n\r\n5. Run `make build`.\r\n\r\n6. Optionally run `make test` to test your build.\r\n\r\n7. Finally run `make install`.\r\n\r\nDepending on how **BSD Make** is called on your system, you may need to\r\nreplace `make` by `bsdmake` or `bmake` in steps 5, 6, and 7.\r\nThe **GNU Make** program usually give up the ghost, croaking\r\n`*** missing separator. Stop.` when you mistakingly use it instead of\r\n**BSD Make**.\r\n\r\nStep 7 requires that you can `su -` if you are not already `root`.\r\n\r\n\r\nMichael Grünewald in Bonn, on October 21, 2014\r\n\r\n\r\n  [licence-url]:        http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.html\r\n  [licence-en]:         COPYING\r\n  [licence-fr]:         COPYING-FR\r\n  [bsdowl-home]:        https://github.com/michipili/bsdowl\r\n  [bsdowl-install]:     https://github.com/michipili/bsdowl/wiki/Install\r\n  [mixture-home]:       https://github.com/michipili/mixture\r\n  [mixture-test]:       https://github.com/michipili/mixture\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}